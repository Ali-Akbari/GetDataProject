install.packages("KernSmooth")
library(KernSmooth)
q()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(tst)
undebug()
undebug
undebug(ls)
setwd("C:/Coursera_R_Work/GetData/Project/GetDataProject")
## Getting and Cleaning Data Project
## Ali
TrainLables <- read.table("UCI HAR Dataset/train/X_train.txt")
TrainData <- read.table("UCI HAR Dataset/train/y_train.txt")
TestLables <- read.table("UCI HAR Dataset/test/X_test.txt")
TestData <- read.table("UCI HAR Dataset/test/y_test.txt")
summary(TrainLables)
str(TrainLables)
## Getting and Cleaning Data Project
## Ali
TrainLables <- read.table("UCI HAR Dataset/train/y_train.txt")
TrainData <- read.table("UCI HAR Dataset/train/X_train.txt")
TestLables <- read.table("UCI HAR Dataset/test/y_test.txt")
TestData <- read.table("UCI HAR Dataset/test/X_test.txt")
str(TestLables)
str(TrainLables)
str(TestData)
TestMeasures <- TestData
TrainMeasures <- TrainData
TestData <- cbind(TestLables, TestMeasures)
str(TestData)
as.factor(TestLable)
as.factor(TestLables)
typeof(TestLables)
as.factor(unlist(TestLables))
typeof(TestData)
?read
help(read)
help("read")
?read.table
tmp <- read.table("UCI HAR Dataset/test/y_test.txt")
typeof(tmp)
ls()
rm(ls())
rm(list=ls())
## Getting and Cleaning Data Project
## Ali
# First read all necessary data from files
TrainSubjects <- read.table("UCI HAR Dataset/train/subject_train.txt")
TrainActivity <- read.table("UCI HAR Dataset/train/y_train.txt")
TrainMeasures <- read.table("UCI HAR Dataset/train/X_train.txt")
TestSubjects <- read.table("UCI HAR Dataset/test/subjects_test.txt")
TestActivity <- read.table("UCI HAR Dataset/test/y_test.txt")
TestMeasures <- read.table("UCI HAR Dataset/test/X_test.txt")
# Combine all related data to make one full table from all observations and variables
TestData <- cbind(TestSubject, TestActivity, TestMeasures)
TrainData <- cbind(TrainSubject, TrainActivity, TrainMeasures)
AllData <- rbind(TrainData, TestData)
TestData <- cbind(TestSubjects, TestActivity, TestMeasures)
TrainData <- cbind(TrainSubjects, TrainActivity, TrainMeasures)
AllData <- rbind(TrainData, TestData)
TestSubjects <- read.table("UCI HAR Dataset/test/subject_test.txt")
TestData <- cbind(TestSubjects, TestActivity, TestMeasures)
TrainData <- cbind(TrainSubjects, TrainActivity, TrainMeasures)
AllData <- rbind(TrainData, TestData)
names(AllData)
nrows(AllData)
nrow(AllData)
ncol(AlData)
ncol(AllData)
tmp <- read.table("UCI HAR Dataset/features.txt")
typeof(tmp)
tmp <- cbind("Subject_id", "Activity_id", tmp)
names(AllData) <- tmp
names(AllData)
typeof(tmp)
head(tmp)
nrow(tmp)
ncol(tmp)
tmp <- read.table("UCI HAR Dataset/features.txt")
ncol(tmp)
head(tmp)
str(tmp)
tmp[,2]
st(tmp[,2])
str(tmp[,2])
Lables <- rbind("Subject_id", "Activity_id", tmp[,2])
str(Lables)
Lables <- rbind("Subject_id", "Activity_id", as.character(tmp[,2]))
str(Lables)
head(Lables)
str(as.character(tmp[,2]))
Lables <- cbind("Subject_id", "Activity_id", as.character(tmp[,2]))
str(Lables)
x <- c(1,2,3)
str(x)
str("test")
Lables <- cbind(c("Subject_id", "Activity_id"), as.character(tmp[,2]))
str(Lables)
Lables <- rbind(c("Subject_id", "Activity_id"), as.character(tmp[,2]))
str(Lables)
tmp[,2]
str(as.character(tmp[,2]))
str(x)
rbind(c(1,2), c(7,8,9))
cbind(c(1,2), c(7,8,9))
c(c(1,2), c(7,8,9))
Lables <- c("Subject_id", "Activity_id", as.character(tmp[,2]))
str(Lables)
names(AllData) <- Lables
names(AllData)
Lables <- c("Subject_id", "Activity_id", tmp[,2])
str(Lables)
str(tmp)
ActivityNames <- read.table("UCI HAR Dataset/activity_labels.txt")
str(ActivityNames)
class(TestSubjects)
str(Test.Subject)
str(TestSubject)
str(TestSubjects)
str(TestMeasures)
str(AllData)
?apply
class(ActivityNames)
str(ActivityNames)
ActivityNames <- ActivityNames[,2]
str(ActivityNames)
tmp <- TestActivity
str(tmp)
tmp <- TestActivity[[1]]
str(tmp)
factor(tmp, labels = ActivityNames)
class(factor(tmp, labels = ActivityNames))
str(tmp)
tmp<-factor(tmp, labels = ActivityNames)
tmp[1]
as.is(tmp[1])
tmp[1]+1
tmp[1]
as.number(tmp[1])
as.numeric(tmp[1])
rm(list=ls())
FeatureNames <- read.table("UCI HAR Dataset/features.txt")
rm(list=ls())
## Getting and Cleaning Data Project
## Ali
# First read all necessary data from files
TrainSubjects <- read.table("UCI HAR Dataset/train/subject_train.txt")
TrainActivity <- read.table("UCI HAR Dataset/train/y_train.txt")
TrainMeasures <- read.table("UCI HAR Dataset/train/X_train.txt")
TestSubjects <- read.table("UCI HAR Dataset/test/subject_test.txt")
TestActivity <- read.table("UCI HAR Dataset/test/y_test.txt")
TestMeasures <- read.table("UCI HAR Dataset/test/X_test.txt")
FeatureNames <- read.table("UCI HAR Dataset/features.txt")
ActivityNames <- read.table("UCI HAR Dataset/activity_labels.txt")
# Combine all related data to make one full table from all observations and variables
TestData <- cbind(TestSubjects, TestActivity, TestMeasures)
TrainData <- cbind(TrainSubjects, TrainActivity, TrainMeasures)
AllData <- rbind(TrainData, TestData)
str(TestSubjects)
str(TestActivity)
str(TestMeasures)
str(TestData)
names(AllData)
Lables <- c("Subject_id", "Activity_id", ActivityNames[,2])
Lables
Lables <- c("Subject_id", "Activity_id", as.character(ActivityNames[,2]))
Lables
Lables <- c("Subject_id", "Activity_id", as.character(FeatureNames[,2]))
Lables
names(AllData) <- c("Subject_id", "Activity_id", as.character(FeatureNames[,2]))
str(AllData)
tmp <- factor(AllData$Activity_id, ActivityNames)
str(tmp)
tmp <- factor(AllData$Activity_id, ActivityNames[,2])
str(tmp)
head(tmp)
tmp <- factor(AllData$Activity_id, ActivityNames[,2])
AllData$Activity_id
tmp <- factor(AllData$Activity_id, as.character(ActivityNames[,2]))
head(str)
head(tmp)
tmp <- factor(AllData$Activity_id, labels = ActivityNames[,2])
head(tmp)
AllData$Activity <- factor(AllData$Activity_id, labels = ActivityNames[,2])
str(AllData)
head(AllData, n=3)
rm(list=ls())
## Getting and Cleaning Data Project
## Ali
# First read all necessary data from files
TrainSubjects <- read.table("UCI HAR Dataset/train/subject_train.txt")
TrainActivity <- read.table("UCI HAR Dataset/train/y_train.txt")
TrainMeasures <- read.table("UCI HAR Dataset/train/X_train.txt")
TestSubjects <- read.table("UCI HAR Dataset/test/subject_test.txt")
TestActivity <- read.table("UCI HAR Dataset/test/y_test.txt")
TestMeasures <- read.table("UCI HAR Dataset/test/X_test.txt")
FeatureNames <- read.table("UCI HAR Dataset/features.txt")
ActivityNames <- read.table("UCI HAR Dataset/activity_labels.txt")
# Combine all related data to make one full table from all observations and variables
# Note that activity column repeated delibrately to convert one of them to descriptive name
TestData <- cbind(TestSubjects, TestActivity, TestActivity, TestMeasures)
TrainData <- cbind(TrainSubjects, TrainActivity, TrainActivity, TrainMeasures)
AllData <- rbind(TrainData, TestData)
# Set meaningful column names
names(AllData) <- c("Subject_id", "Activity_id", "Activity", as.character(FeatureNames[,2]))
# Convert Activity_id to descriptive activity name inside $Activity
AllData$Activity <- factor(AllData$Activity, labels = ActivityNames[,2])
AllData[1:3,1:7]
class(AllData)
str(AllData)
test <- AllData[20:25,]
str(test)
test[,grep("act", names(test))]
test[,grep("Act", names(test))]
test[,grep(c("Subj",Act"), names(test))]
test[,grep(c("Subj","Act"), names(test))]
test[,grep("Act", names(test)) | grep("Sub", names(test))]
test[,grep("Act", names(test)) | grep("Subj", names(test))]
test[,grep("Act", names(test)) | grep("Subj", names(test))]
test[,grep("Act", names(test)) ]
grep("Act", names(test)) | grep("Subj", names(test))
grep("Act", names(test))
str(grep("Act", names(test)))
c(grep("Act", names(test)) , grep("Subj", names(test)))
test[,c(1:3, grep("mean()", names(test)), grep("std()", names(test)))]
names(test[,c(1:3, grep("mean()", names(test)), grep("std()", names(test)))])
test <- test[,c(1:3, grep("mean()", names(test)), grep("std()", names(test)))]
str(test)
test[,grep("meanFreq", names(test))] <- NULL
test[,grep("meanFreq", names(test))]
str(test[,grep("meanFreq", names(test))])
test2 <- test[,-grep("meanFreq", names(test))]
str(test2)
?tapply
rm(list=ls())
## Getting and Cleaning Data Project
## Ali
## Note that the requirement is not to do the tasks by exactly the same order
## following script gives exactly the same result as requested in the project description
## but the order of preparation is almost like below:
# 1. Merges the training and the test sets to create one data set.
# 4. Appropriately labels the data set with descriptive variable names.
# 3. Uses descriptive activity names to name the activities in the data set
# 2. Extracts only the measurements on the mean and standard deviation for each measurement.
# 5. From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
# First read all necessary data from files
TrainSubjects <- read.table("UCI HAR Dataset/train/subject_train.txt")
TrainActivity <- read.table("UCI HAR Dataset/train/y_train.txt")
TrainMeasures <- read.table("UCI HAR Dataset/train/X_train.txt")
TestSubjects <- read.table("UCI HAR Dataset/test/subject_test.txt")
TestActivity <- read.table("UCI HAR Dataset/test/y_test.txt")
TestMeasures <- read.table("UCI HAR Dataset/test/X_test.txt")
FeatureNames <- read.table("UCI HAR Dataset/features.txt")
ActivityNames <- read.table("UCI HAR Dataset/activity_labels.txt")
# (1.) Combine all related data to make one full table from all observations and variables
# Note that activity column repeated delibrately to convert one of them to descriptive name
TestData <- cbind(TestSubjects, TestActivity, TestActivity, TestMeasures)
TrainData <- cbind(TrainSubjects, TrainActivity, TrainActivity, TrainMeasures)
AllData <- rbind(TrainData, TestData)
# (4.) Set meaningful column names
names(AllData) <- c("Subject_id", "Activity_id", "Activity", as.character(FeatureNames[,2]))
# (3.) Convert Activity_id to descriptive activity name inside $Activity
AllData$Activity <- factor(AllData$Activity, labels = ActivityNames[,2])
# (2.) Keep only the requested measurements and get rid of other columns
# We want to keep first 3 columns (subject and activity info) plus "mean" or "std" related columns
# Then we remove "meanFreq" related columns too because it asks mean/std "for each measurement" not for their frquency component
SelectedData <- AllData[,c(1:3, grep("mean()", names(AllData)), grep("std()", names(AllData)))]
SelectedData <- SelectedData[, -grep("meanFreq", names(SelectedData))]
# (5.) Creat final tidy data with average of each variable for each activity and subject
str(SelectedData)
aggregate(tBodyAcc-mean()-X ~ Activity_id, data=SelectedData, mean)
aggregate(tBodyAcc-mean()-X ~ Activity_id, data=SelectedData, sum)
aggregate(Subject_id ~ Activity_id, data=SelectedData, sum)
?aggregate
aggregate(SelectedData[,5] ~ Activity_id, data=SelectedData, sum)
aggregate(SelectedData[,1] ~ Activity_id, data=SelectedData, sum)
aggregate(SelectedData[,10:13] ~ Activity_id, data=SelectedData, sum)
library (dplyr)
install.packages(dplyr)
install.packages("dplyr")
library (dplyr)
install.packages("dplyr")
?melt
str(melt)
melt
install.packages("reshape")
melt
library(reshape)
melt
str(names(SelectedData))
m <- melt(SelectedData, id=c("Subject_id", "Activity_id"), measure.var=names(SelectedData)[4:69])
head(m)
r <- dcast(m, Activity_id ~ variable, mean)
install.packages("reshape2")
library(reshape2)
m <- melt(SelectedData, id=c("Subject_id", "Activity_id"), measure.var=names(SelectedData)[4:69])
head(m)
r <- dcast(m, Activity_id ~ variable, mean)
head(r)
str(r)
r <- dcast(m, Subject_id+Activity_id ~ variable, mean)
str(r)
?write.table
write.table(TidyData, file="TidyData.txt", row.name=FALSE)
MeltData <- melt(SelectedData, id=c("Subject_id", "Activity_id"), measure.var=names(SelectedData)[4:69])
TidyData <- dcast(MeltData, Subject_id+Activity_id ~ variable, mean)
write.table(TidyData, file="TidyData.txt", row.name=FALSE)
test <- read.table("TidyData.txt")
str(test)
names(TidyData)
names(TidyData)
